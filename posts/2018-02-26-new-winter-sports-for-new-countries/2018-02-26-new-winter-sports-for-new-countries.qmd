---
title: New Winter Sports for New Countries
author: Art Steinmetz
date: '2018-02-26'
slug: new-winter-sports-for-new-countries
categories:
  - web scraping
  - sports
---



<div id="looking-at-winter-olympic-medal-rankings-by-vintage-of-sport-introduction" class="section level1">
<h1>Looking at Winter Olympic Medal Rankings by Vintage of Sport Introduction</h1>
<p>Norway is a tiny country that punches way above its weight in the Winter Olympic medal count. We are not surprised as those folks are practically born on skis. At the same time, toussle-haired surfer dudes and dudettes from the US seem to be all over the hill when snowboards are involved. Notably, the sports where the US is most visible are sports which arose fairly recently. Is there a pattern here? Let’s do a quick hit to see if we can visualize the dominance of countries, not by event, but by vintage of a sport’s introduction to the games.</p>
<pre class="sourceCode r"><code>library(tidyverse)
library(rvest)
library(knitr)</code></pre>
</div>
<div id="scrape-and-clean-the-data-from-the-web" class="section level1">
<h1>Scrape and Clean the Data from the Web</h1>
<p>I chose to get the medal total by scraping the NBC site. Doubtless you could find another source for this. Making an error-proof run through the countries was like navigating slalom gates. The code is simple now but, due to variations in the tables from country to country it took a number of iterations to get this right. Using the “Inspect” feature of Google Chrome really helped me here to extract the right pieces (“xpath selectors”).</p>
<p>By the time you see this the web site may have changed or disappeared.</p>
<pre class="sourceCode r"><code>#get top medal countries. Countries with 10 or more medals in total
URL_stub&lt;-&quot;http://www.nbcolympics.com/medals/&quot;

#the order of the countries is grouped by continent, then total medal count
countries&lt;-as_factor(c(&quot;Norway&quot;,&quot;Germany&quot;,&quot;Netherlands&quot;,&quot;Austria&quot;,&quot;Switzerland&quot;,
                       &quot;France&quot;,&quot;Sweden&quot;,&quot;Italy&quot;,&quot;olympic-athlete-russia&quot;,
                       &quot;south-korea&quot;,&quot;Japan&quot;,
                       &quot;united-states&quot;,&quot;Canada&quot;))

all_medals&lt;-data_frame()
for (country in countries){
  print(country)
  medals_raw&lt;-read_html(paste0(URL_stub,country))
  medals&lt;-medals_raw %&gt;%
    html_node(xpath=&quot;//table[@class=&#39;grid-table grid-table-2018&#39;]&quot;) %&gt;%
    html_table() %&gt;% .[,1:5] %&gt;%
    mutate(Country=country) %&gt;%
    # get rid of special chars
    mutate(Sport=str_extract(Sport,&quot;(\\w|\\-| )+&quot;)) %&gt;%
    select(Country,everything()) %&gt;%
    {.}
  all_medals&lt;-bind_rows(medals,all_medals)
}</code></pre>
<pre><code>## [1] &quot;Norway&quot;
## [1] &quot;Germany&quot;
## [1] &quot;Netherlands&quot;
## [1] &quot;Austria&quot;
## [1] &quot;Switzerland&quot;
## [1] &quot;France&quot;
## [1] &quot;Sweden&quot;
## [1] &quot;Italy&quot;
## [1] &quot;olympic-athlete-russia&quot;
## [1] &quot;south-korea&quot;
## [1] &quot;Japan&quot;
## [1] &quot;united-states&quot;
## [1] &quot;Canada&quot;</code></pre>
<p>Now get the Wikipedia page that describes the first year an event was held. We are limiting ourselves to the broad class of sport. There are many snowboarding events that were introduced in different years. We are lumping all snowboard events together and using just the first year a snowboarding event was introduced.</p>
<p>Again, there is no guarantee that the Wikipedia page format won’t change in the future.</p>
<pre class="sourceCode r"><code>URL&lt;-&quot;https://en.wikipedia.org/wiki/Winter_Olympic_Games&quot;
wiki_page_raw&lt;-read_html(URL)

current_sports&lt;-wiki_page_raw %&gt;%
  html_node(xpath=&quot;//*[@id=&#39;mw-content-text&#39;]/div/table[3]&quot;) %&gt;%
  html_table() %&gt;% .[,1:4] %&gt;%
  mutate(Years=str_extract(Years,&quot;\\d{4}&quot;)) %&gt;%
  rename(Notes=`Medal events contested in 2014`,Year=Years) %&gt;%
  mutate(Notes=str_replace(Notes,&quot;\\[\\d+\\]&quot;,&quot;&quot;))</code></pre>
<p>The names of the sports aren’t exactly the same at both sites so align the names of the sports in both tables.</p>
<pre class="sourceCode r"><code>#we can get some better alignment by forcing case agreement
all_medals&lt;-all_medals %&gt;% mutate(Sport=str_to_title(Sport))
current_sports&lt;-current_sports %&gt;% mutate(Sport=str_to_title(Sport))

#manually fix the four remaining problems
current_sports&lt;-current_sports %&gt;% mutate(Sport=ifelse(Sport==&quot;Short Track Speed Skating&quot;,&quot;Short Track&quot;,Sport))
current_sports&lt;-current_sports %&gt;% mutate(Sport=ifelse(Sport==&quot;Bobsleigh&quot;,&quot;Bobsled&quot;,Sport))
current_sports&lt;-current_sports %&gt;% mutate(Sport=ifelse(Sport==&quot;Ice Hockey&quot;,&quot;Hockey&quot;,Sport))
current_sports&lt;-current_sports %&gt;% mutate(Sport=ifelse(Sport==&quot;Cross-Country Skiing&quot;,&quot;Cross-Country&quot;,Sport))

#diplay clean results
all_medals %&gt;% select(Sport) %&gt;%
  distinct() %&gt;%
  left_join(current_sports) %&gt;%
  arrange(Year) %&gt;%
  kable()</code></pre>

<table>
<thead>
<tr class="header">
<th align="left">Sport</th>
<th align="left">Year</th>
<th align="right">Events</th>
<th align="left">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">Figure Skating</td>
<td align="left">1924</td>
<td align="right">5</td>
<td align="left">Men’s and women’s singles; pairs; ice dancing and team event.</td>
</tr>
<tr class="even">
<td align="left">Speed Skating</td>
<td align="left">1924</td>
<td align="right">14</td>
<td align="left">Men’s and women’s 500 m, 1000 m, 1500 m, 5000 m, Massstart and team pursuit; women’s 3000 m; men’s 10,000 m.</td>
</tr>
<tr class="odd">
<td align="left">Bobsled</td>
<td align="left">1924</td>
<td align="right">3</td>
<td align="left">Four-man race, two-man race and two-woman race.</td>
</tr>
<tr class="even">
<td align="left">Hockey</td>
<td align="left">1924</td>
<td align="right">2</td>
<td align="left">Men’s and women’s tournaments.</td>
</tr>
<tr class="odd">
<td align="left">Curling</td>
<td align="left">1924</td>
<td align="right">3</td>
<td align="left">Men’s, women’s and mixed doubles. tournaments.</td>
</tr>
<tr class="even">
<td align="left">Cross-Country</td>
<td align="left">1924</td>
<td align="right">12</td>
<td align="left">Men’s sprint, team sprint, 30 km pursuit, 15 km, 50 km and 4x10 km relay; women’s sprint, team sprint, 15 km pursuit, 10 km, 30 km and 4x5 km relay.</td>
</tr>
<tr class="odd">
<td align="left">Nordic Combined</td>
<td align="left">1924</td>
<td align="right">3</td>
<td align="left">Men’s 10 km individual normal hill, 10 km individual large hill and team.</td>
</tr>
<tr class="even">
<td align="left">Ski Jumping</td>
<td align="left">1924</td>
<td align="right">4</td>
<td align="left">Men’s individual large hill, team large hill; men’s and women’s individual normal hill.</td>
</tr>
<tr class="odd">
<td align="left">Skeleton</td>
<td align="left">1928</td>
<td align="right">2</td>
<td align="left">Men’s and women’s events.</td>
</tr>
<tr class="even">
<td align="left">Alpine Skiing</td>
<td align="left">1936</td>
<td align="right">11</td>
<td align="left">Men’s and women’s downhill, super G, giant slalom, slalom, and combined, and parallel slalom.</td>
</tr>
<tr class="odd">
<td align="left">Biathlon</td>
<td align="left">1960</td>
<td align="right">11</td>
<td align="left">Sprint (men: 10 km; women: 7.5 km), the individual (men: 20 km; women: 15 km), pursuit (men: 12.5 km; women: 10 km), relay (men: 4x7.5 km; women: 4x6 km; mixed: 2x7.5 km+2x6 km), and the mass start (men: 15 km; women: 12.5 km).</td>
</tr>
<tr class="even">
<td align="left">Luge</td>
<td align="left">1964</td>
<td align="right">4</td>
<td align="left">Men’s and women’s singles, men’s doubles, team relay.</td>
</tr>
<tr class="odd">
<td align="left">Freestyle Skiing</td>
<td align="left">1992</td>
<td align="right">10</td>
<td align="left">Men’s and women’s moguls, aerials, ski cross, superpipe, and slopestyle.</td>
</tr>
<tr class="even">
<td align="left">Short Track</td>
<td align="left">1992</td>
<td align="right">8</td>
<td align="left">Men’s and women’s 500 m, 1000 m, 1500 m; women’s 3000 m relay; and men’s 5000 m relay.</td>
</tr>
<tr class="odd">
<td align="left">Snowboarding</td>
<td align="left">1998</td>
<td align="right">8</td>
<td align="left">Men’s and women’s parallel, half-pipe, snowboard cross, and slopestyle.</td>
</tr>
</tbody>
</table>
<p>Good! It must be noted that we are working with tiny data here. If my boss asked me to do this I would just manually create all these tables, in the interest of time. Here at OutsideRdata we do things, not the hard way, but the way that teaches us the most!</p>
<p>The cleaning is done. Now lets join the tables, make sure the countries are in the right order and add some observations using the oh-so-useful <code>complete</code> function to put zeros in the missing combinations of year and sport for every country.</p>
<pre class="sourceCode r"><code>final_table &lt;- all_medals %&gt;%
  select(Country,Sport,Total) %&gt;%
  left_join(current_sports) %&gt;% .[,1:4]

#make sure the order of the countries matches the order we started with
final_table$Country &lt;- as_factor(final_table$Country,levels=levels(countries))

#fill empty cases with zero so there are no blanks in the plot
final_table &lt;- final_table %&gt;% complete(Country,Sport,Year,fill=list(Total=0))

agg_medals&lt;-final_table %&gt;% group_by(Country,Year) %&gt;%
  summarize(Total=sum(Total))
agg_medals[1:10,] %&gt;% kable()</code></pre>
<table>
<thead>
<tr class="header">
<th align="left">Country</th>
<th align="left">Year</th>
<th align="right">Total</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">Canada</td>
<td align="left">1924</td>
<td align="right">11</td>
</tr>
<tr class="even">
<td align="left">Canada</td>
<td align="left">1928</td>
<td align="right">0</td>
</tr>
<tr class="odd">
<td align="left">Canada</td>
<td align="left">1936</td>
<td align="right">0</td>
</tr>
<tr class="even">
<td align="left">Canada</td>
<td align="left">1960</td>
<td align="right">0</td>
</tr>
<tr class="odd">
<td align="left">Canada</td>
<td align="left">1964</td>
<td align="right">2</td>
</tr>
<tr class="even">
<td align="left">Canada</td>
<td align="left">1992</td>
<td align="right">12</td>
</tr>
<tr class="odd">
<td align="left">Canada</td>
<td align="left">1998</td>
<td align="right">4</td>
</tr>
<tr class="even">
<td align="left">united-states</td>
<td align="left">1924</td>
<td align="right">7</td>
</tr>
<tr class="odd">
<td align="left">united-states</td>
<td align="left">1928</td>
<td align="right">0</td>
</tr>
<tr class="even">
<td align="left">united-states</td>
<td align="left">1936</td>
<td align="right">3</td>
</tr>
</tbody>
</table>
<div id="a-digression" class="section level2">
<h2>A Digression</h2>
<p>A best practice with tidy data is to have every observation and every variable in a single data table. Where we want to use the data in a related table we use <code>_join</code> to add the data to the main table. This runs contrary to best practice in the early days of PC databases where “relational” was a big part of data manipulation. The data tables were kept separate and linked by keys. Keys are still how <code>_join</code> works, of course, but we just make one humongous table rather than look up the related fields on the fly. This is faster but uses more memory and/or storage. Back in the day when a couple megabytes of RAM was a lot, we cared about those things, even for small data projects. Now, we use local million-row tables with nary a blink of the eye. You kids don’t know how tough it was!</p>
</div>
</div>
<div id="visualize" class="section level1">
<h1>Visualize</h1>
<pre class="sourceCode r"><code>agg_medals %&gt;% ggplot(aes(Year,Country,fill=Total))+geom_tile()</code></pre>
<p>
![](img/unnamed-chunk-6-1.png)
</p>
<p>We see some patterns emerging but this chart is mostly a reflection of the fact that most of the sports have been around since the beginning of the Winter games. There are more medals to be won in those sports. Let’s normalize the data by the fraction of total medals in each vintage. Also clean up the labels a bit.</p>
<pre class="sourceCode r"><code>agg_medals&lt;-agg_medals %&gt;%
  group_by(Year) %&gt;%
  mutate(Pct_That_Year=Total/sum(Total))

agg_medals %&gt;%
  ggplot(aes(Year,Country,fill=Pct_That_Year))+geom_tile()+
  labs(title=&quot;New Countries Win in New Sports&quot;,
       subtitle=&quot;Medal Ranking by Vintage of Sport&quot;,
       x=&quot;Year Sport Introduced&quot;,
       y=&quot;Country by Continent&quot;)+
  geom_hline(yintercept = 2.5,size=2)+
  geom_hline(yintercept = 4.5,size=2)</code></pre>
<p>
![](img/unnamed-chunk-7-1.png)
</p>
<p>There you have it. We clearly see that the U.S. and Canada come to the fore with the most recently introduced events. The schussing countries of Europe are a bit stronger in the older sports. Note the intersection of Germany and 1964. There was one sport inaugurated in 1964, luge. Likewise, in 1928 the only sport introduced was skeleton. Some events, like skeleton, appeared, dissapeared then reappeared again (in the case of skeleton, 2002). Biathalon is listed as a 1960 vintage sport - newish. Cross-country skiing is half the event and the Norwegians are very strong, of course. This shows the limitation of this analysis.</p>
<p>It is strange that skeleton, bobsled and luge are broken out as separate sports while “Alpine Skiing” is just one. For the purposes of this analysis it doesn’t affect the conclusions.</p>
<p>If we wanted to take this further, a more robust analysis would use several Olympics to get a larger sample size but I have to move on to March Madness!</p>
</div>
